{"version":3,"sources":["pages/HomePage/FilmsList/FilmsList.module.scss","App.module.scss","pages/HomePage/HomePage.module.scss","pages/HomePage/AddFilm/AddFilm.module.scss","hooks/useSelector.js","hooks/useAction.js","routes.js","models/filmlist/selectors.js","components/Input/styles.js","components/Input/Input.jsx","components/Button/Button.jsx","pages/HomePage/AddFilm/AddFilm.jsx","models/filmlist/action.js","pages/HomePage/FilmsList/FilmsList.jsx","pages/HomePage/HomePage.jsx","pages/FilmPage/Film/FieldFilm/Field/Field.jsx","pages/FilmPage/Film/FieldFilm/FieldFilm.jsx","pages/FilmPage/Film/Film.jsx","App.js","utils/deepCopy.js","utils/removePropFromObject.js","utils/removeArrayElement.js","models/filmlist/reducer.js","api/api.js","models/filmlist/sagas.js","state/Store.js","index.js"],"names":["module","exports","func","params","useSelector","state","useAction","type","dispatch","useDispatch","useCallback","payload","HOME_PAGE","getIsPost","films","isPost","getFilms","filmsList","entities","getIds","ids","getInitSelector","createSelector","init","getFilmsSelector","getFieldsSelector","memoize","id","Object","keys","filter","value","getFilteredItems","search","item","name","toLowerCase","includes","Group","styled","div","Label","label","Bar","InputField","input","Error","Input","handler","blur","keyDown","desc","isError","focus","onChange","onBlur","onKeyDown","placeholder","autoFocus","Btn","button","Button","children","clickHandler","onClick","AddFilm","useState","isShow","setIsShow","setName","genre","setGenre","date","setDate","country","setCountry","setIsError","isDone","postFilm","setIsDone","nameHandler","e","currentTarget","genreHandler","dateHandler","countryHandler","useEffect","setTimeout","theme","collapse","classes","reactCollapse","content","classnames","createdFilmFrame","show","isOpened","className","title","titleText","frameFields","field","error","green","btn","trim","Date","now","fields","close","active","FilmsList","history","useHistory","setSearch","filteredFilms","isSearch","test","location","removeFilm","searchHandler","push","match","replace","map","key","to","activeClassName","filmsItem","removeBtn","removeFilmHandler","filmsContainer","HomePage","home","StyledValue","WrapField","Field","handlerKeyDown","handlerBlur","fnDBClick","target","valueDefault","onDoubleClick","data-name","FieldFilm","setTarget","setValue","original","setOriginal","updateFieldFilm","editHandler","getAttribute","FilmContainer","Nav","NavLink","Film","useParams","i","App","isInit","path","exact","render","JSON","parse","stringify","removePropFromObject","obj","res","removeArrayElement","index","indexOf","splice","initialState","filmsReducer","action","deepCopy","API","instance","get","postCreateFilms","film","post","deleteFilm","delete","updateFilm","put","this","axios","create","baseURL","updateFilmField","rootSaga","call","console","log","filmsSchema","schema","Entity","filmsListSchema","dataNormalized","normalize","data","result","takeEvery","saga","createSagaMiddleware","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b9e7bf24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsContainer\":\"FilmsList_filmsContainer__JmlP5\",\"search\":\"FilmsList_search__18S_D\",\"content\":\"FilmsList_content__3E1Tk\",\"item\":\"FilmsList_item__3rCGR\",\"filmsItem\":\"FilmsList_filmsItem__2QRPY\",\"removeBtn\":\"FilmsList_removeBtn__3ij-w\",\"active\":\"FilmsList_active__2eAO5\",\"title\":\"FilmsList_title__1XeHc\",\"titleText\":\"FilmsList_titleText__imU33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1jE_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomePage_home__2Krpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactCollapse\":\"AddFilm_reactCollapse__2j1Hv\",\"createdFilmFrame\":\"AddFilm_createdFilmFrame__2ekrC\",\"show\":\"AddFilm_show__2pDiv\",\"title\":\"AddFilm_title__9uoyR\",\"titleText\":\"AddFilm_titleText__1_2nb\",\"close\":\"AddFilm_close__1VhUY\",\"active\":\"AddFilm_active__2Mew0\",\"frameFields\":\"AddFilm_frameFields__1WhKh\",\"field\":\"AddFilm_field__3xikl\",\"error\":\"AddFilm_error__7WTNS\",\"green\":\"AddFilm_green__3wHNb\",\"btn\":\"AddFilm_btn__2G5l0\"};","import { useSelector } from 'react-redux';\r\n\r\nexport default (func, params = {}) => useSelector(state => func(state, params));","import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","export const HOME_PAGE = ['/', '/films/:id'];\r\nexport const FILM_PAGE = '/films/:id';","import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst getInit = state => {\r\n  return state.films.init;\r\n};\r\n\r\nexport const getIsPost = state => {\r\n  return state.films.isPost;\r\n};\r\n\r\nconst getFilms = state => {\r\n  return state.films.filmsList.entities;\r\n};\r\n\r\nconst getIds = state => {\r\n  return state.films.filmsList.ids;\r\n};\r\n\r\nexport const getInitSelector = createSelector([getInit], init => init);\r\n\r\nexport const getFilmsSelector = createSelector([getFilms], films => films);\r\n\r\nexport const getFieldsSelector = createSelector([getFilms, getIds], (films) => {\r\n  return memoize(id => {\r\n    return Object.keys(films[id] || []).filter(value => (value !== 'id' && value !== 'fields'));\r\n  });\r\n});\r\n\r\nexport const getFilteredItems = createSelector([getFilms, getIds], (films, ids) => {\r\n  return memoize(search => {\r\n    return ids.filter(item => (films[item].name.toLowerCase().includes(search.toLowerCase())));\r\n  })\r\n});","import styled from 'styled-components';\r\n\r\nexport const Group = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n  color: #999;\r\n  position: absolute;\r\n  left: 30px;\r\n  top: 25px;\r\n  transition: 0.2s ease all;\r\n`;\r\n\r\nexport const Bar = styled.div`\r\n  position: absolute;\r\n  height: 3px;\r\n  content: '';\r\n  transform: rotateY(90deg);\r\n  transition: transform .2s linear;\r\n  background-color: #ea5a5a;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n  border: none;\r\n  background-color: transparent;\r\n  width: 100%;\r\n  font-size: 22px;\r\n  padding-left: 15px;\r\n  padding-bottom: 7px;\r\n  border-bottom: 2px solid #999;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  &:focus ~ ${Label}, &:not(:placeholder-shown) ~ ${Label} {\r\n  top: -5px;\r\n  color: #ea5a5a;\r\n  }\r\n  &:focus ~ ${Bar}, &:not(:placeholder-shown) ~ ${Bar} {\r\n  transform: rotateY(0deg);\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  position: absolute;\r\n  font-family: Helvetica_Medium;\r\n  font-size: 16px;\r\n  color: red;\r\n  bottom: -45%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  Bar,\r\n  Error,\r\n  Group,\r\n  InputField,\r\n  Label\r\n} from './styles';\r\n\r\nconst Input = ({\r\n  value,\r\n  handler,\r\n  blur,\r\n  keyDown,\r\n  desc,\r\n  isError,\r\n  focus = false\r\n}) => (\r\n  <Group>\r\n    <InputField\r\n      value={value}\r\n      onChange={handler}\r\n      onBlur = {blur}\r\n      onKeyDown = {keyDown}\r\n      placeholder=' '\r\n      type=\"text\"\r\n      autoFocus = {focus}\r\n    />\r\n    <Bar />\r\n    <Label>{desc}</Label>\r\n    {(isError && !value)\r\n    && <Error>\r\n      Заполните поле.\r\n    </Error>}\r\n  </Group>\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Btn = styled.button`\r\n  background: #ea5a5a;\r\n  text-transform: uppercase;\r\n  max-width: 160px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  line-height: 2.5;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  font-family: Helvetica_Bold;\r\n  border-radius: 20px;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst Button = ({ children, clickHandler }) => (\r\n  <Btn onClick={clickHandler}>\r\n    {children}\r\n  </Btn>\r\n);\r\n\r\nexport default Button;","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Collapse } from 'react-collapse';\r\nimport classnames from 'classnames';\r\nimport classes from './AddFilm.module.scss';\r\nimport Input from '../../../components/Input/Input';\r\nimport Button from '../../../components/Button/Button';\r\nimport useSelector from '../../../hooks/useSelector';\r\nimport { getIsPost } from '../../../models/filmlist/selectors';\r\nimport useAction from '../../../hooks/useAction';\r\nimport {\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS\r\n} from '../../../models/filmlist/action';\r\n\r\n\r\nconst AddFilm = () => {\r\n  \r\n  const [isShow, setIsShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  const isDone = useSelector(getIsPost);\r\n  const postFilm = useAction(POST_FILM);\r\n  const setIsDone = useAction(POST_FILM_SUCCESS);\r\n  \r\n  const showHandler = () => {\r\n    setIsShow(!isShow);\r\n    if (isShow) {\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    }\r\n  };\r\n  \r\n  const nameHandler = useCallback(e => {\r\n    setName(e.currentTarget.value);\r\n  }, [setName]);\r\n  \r\n  const genreHandler = useCallback(e => {\r\n    setGenre(e.currentTarget.value);\r\n  }, [setGenre]);\r\n  \r\n  const dateHandler = useCallback(e => {\r\n    setDate(e.currentTarget.value);\r\n  }, [setDate]);\r\n  \r\n  const countryHandler = useCallback(e => {\r\n    setCountry(e.currentTarget.value);\r\n  }, [setCountry]);\r\n  \r\n  const sumbitHandler = () => {\r\n    if (name.trim() && genre.trim() && date.trim() && country.trim()) {\r\n      const id = Date.now();\r\n      postFilm({\r\n        payload: {\r\n          id, name, genre, date, country,\r\n          fields: [\r\n            'Название', 'Жанр', 'Дата выхода', 'Страна'\r\n          ]\r\n        }\r\n      });\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isError) {\r\n      setTimeout(() => setIsError(false), 2000);\r\n    }\r\n    if (isDone) {\r\n      setTimeout(() => setIsDone(false), 2000);\r\n    }\r\n  }, [isError, isDone, setIsDone]);\r\n  \r\n  const theme = {\r\n    collapse: `${classes.reactCollapse}`,\r\n    content: `${classnames(\r\n      classes.createdFilmFrame,\r\n      isShow && classes.show)}`\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Collapse isOpened={isShow || !isShow} theme={theme}>\r\n      <div className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          Добавить фильм\r\n        </div>\r\n      </div>\r\n      <div className={classes.frameFields}>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={name} handler={nameHandler} desc='Название' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={genre} handler={genreHandler} desc='Жанр' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={date} handler={dateHandler} desc='Дата выхода' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={country} handler={countryHandler} desc='Страна выпуска' />\r\n        </div>\r\n        {isDone &&\r\n        <div className={classnames(\r\n          classes.error,\r\n          classes.green\r\n        )}>\r\n          Фильм добавлен.\r\n        </div>}\r\n      </div>\r\n      <div className={classes.btn}>\r\n        <Button clickHandler={sumbitHandler}>Добавить фильм</Button>\r\n      </div>\r\n      <div\r\n        className={classnames(\r\n          classes.close,\r\n          isShow && classes.active)\r\n        }\r\n        onClick={showHandler} />\r\n    </Collapse>\r\n  )\r\n};\r\n\r\nexport default AddFilm;","export const POST_FILM = 'POST_FILM';\r\nexport const POST_FILM_SUCCESS = 'POST_FILM_SUCCESS';\r\nexport const ADD_FILM = 'ADD_FILM';\r\nexport const GET_FILMS = 'GET_FILMS';\r\nexport const PUT_FILMS = 'PUT_FILMS';\r\nexport const SET_INIT = 'SET_INIT';\r\nexport const DELETE_FILM = 'DELETE_FILM';\r\nexport const REMOVE_FILM = 'REMOVE_FILM';\r\nexport const UPDATE_FILM_FIELD = 'UPDATE_FILM_FIELD';\r\nexport const UPDATE_FILM_FIELD_REDUCER = 'UPDATE_FILM_FIELD_REDUCER';","import React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  NavLink,\r\n  useHistory\r\n} from 'react-router-dom';\r\nimport Input from '../../../components/Input/Input';\r\nimport classes from './FilmsList.module.scss';\r\nimport useSelector from '../../../hooks/useSelector';\r\nimport {\r\n  getFilmsSelector,\r\n  getFilteredItems\r\n} from '../../../models/filmlist/selectors';\r\nimport useAction from '../../../hooks/useAction';\r\nimport { DELETE_FILM } from '../../../models/filmlist/action';\r\n\r\nconst FilmsList = () => {\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState('');\r\n  const films = useSelector(getFilmsSelector);\r\n  const filteredFilms = useSelector(getFilteredItems)(search);\r\n  const isSearch = /\\?search=([(a-zA-Z)|(а-яА-Я)|\\w]+)/.test(history.location.search);\r\n  const removeFilm = useAction(DELETE_FILM);\r\n  \r\n  \r\n  const searchHandler = useCallback(e => {\r\n    if (e.currentTarget.value.trim()) {\r\n      setSearch(e.currentTarget.value);\r\n      history.push(`/?search=${e.currentTarget.value.toLowerCase()}`);\r\n    } else {\r\n      setSearch('');\r\n      history.push(`/`);\r\n    }\r\n  }, [setSearch, history]);\r\n  \r\n  \r\n  const removeFilmHandler = (id) => {\r\n    removeFilm(id);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isSearch) {\r\n      const match = history.location.search.match(/=(.+)$/m)[1].replace(/%20/g, ' ');\r\n      setSearch(match);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!isSearch && search) {\r\n      setSearch('');\r\n    }\r\n  }, [isSearch, search]);\r\n  \r\n  const filmsList = filteredFilms.map(id => {\r\n    return (\r\n      <li key={id} className={classes.item}>\r\n        <NavLink\r\n          to={`/films/${id}`}\r\n          activeClassName={classes.active}\r\n          className={classes.filmsItem}\r\n        >\r\n          <div className={classes.title}>\r\n            <span className={classes.titleText}>\r\n              {films[id].name}\r\n            </span>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to='/' className={classes.removeBtn} onClick={() => removeFilmHandler(id)}>\r\n          ✖\r\n        </NavLink>\r\n      </li>\r\n    )\r\n  });\r\n  \r\n  \r\n  return (\r\n    <div className={classes.filmsContainer}>\r\n      <div className={classes.search}>\r\n        <Input value={search} handler={searchHandler} desc='Введите название фильма' />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <ul>\r\n          {filmsList}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default FilmsList;\r\n","import React from 'react';\r\nimport classes from './HomePage.module.scss';\r\nimport AddFilm from './AddFilm';\r\nimport FilmsList from './FilmsList';\r\n\r\n\r\nconst HomePage = () => {\r\n  \r\n  \r\n  return (\r\n    <div className={classes.home}>\r\n      <AddFilm />\r\n      <FilmsList />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  Bar,\r\n  Group\r\n} from '../../../../../components/Input/styles';\r\nimport Input from '../../../../../components/Input/Input';\r\n\r\n\r\n\r\nexport const StyledValue = styled.div`\r\n  font-size: 22px;\r\n  color: #444;\r\n  word-break: break-word;\r\n  border-bottom: 2px solid #444;\r\n  width: 100%;\r\n  padding: 30px 0 7px 15px;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nexport const WrapField = styled.div`\r\n  padding: 0 55px;\r\n`;\r\n\r\nconst Field = ({\r\n  value,\r\n  handler,\r\n  handlerKeyDown,\r\n  handlerBlur,\r\n  name,\r\n  field,\r\n  fnDBClick,\r\n  target,\r\n  valueDefault,\r\n}) => (\r\n  <Group>\r\n    <WrapField>\r\n      {(target !== name)\r\n        ? <StyledValue\r\n          onDoubleClick={fnDBClick}\r\n          data-name={name}\r\n        >\r\n          {field}: {valueDefault}\r\n        </StyledValue>\r\n        : <Input\r\n          value={value}\r\n          handler={handler}\r\n          type=\"text\"\r\n          blur={handlerBlur}\r\n          keyDown={handlerKeyDown}\r\n          focus={true}\r\n        />}\r\n    </WrapField>\r\n    <Bar />\r\n  </Group>\r\n);\r\n\r\nexport default Field;","import React, { useCallback, useState } from 'react';\r\nimport Field from './Field';\r\nimport useAction from '../../../../hooks/useAction';\r\nimport { UPDATE_FILM_FIELD } from '../../../../models/filmlist/action';\r\n\r\n\r\nconst FieldFilm = ({\r\n  id,\r\n  field,\r\n  valueDefault,\r\n  name,\r\n  films\r\n}) => {\r\n  const [target, setTarget] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [original, setOriginal] = useState('');\r\n  const updateFieldFilm = useAction(UPDATE_FILM_FIELD);\r\n  \r\n  const editStartHandler = e => {\r\n    setValue(valueDefault);\r\n    setOriginal(valueDefault);\r\n    setTarget(e.currentTarget.getAttribute('data-name'));\r\n  };\r\n  \r\n  \r\n  const editStopBlurHandler = () => {\r\n    if (value.trim() && value !== original) {\r\n      updateFieldFilm({\r\n        id,\r\n        payload: { ...films[id], [target]: value }\r\n      });\r\n      setTarget('');\r\n    } else {\r\n      setTarget('');\r\n      setValue(original);\r\n    }\r\n  };\r\n  \r\n  const editHandler = useCallback(e => {\r\n    setValue(e.currentTarget.value);\r\n  }, [setValue]);\r\n  \r\n  const editStopKeyHandler = e => {\r\n    if (e.key === 'Enter') {\r\n      if (value !== original && value.trim()) {\r\n        updateFieldFilm({\r\n          id,\r\n          payload: { ...films[id], [target]: value }\r\n        });\r\n        setTarget('');\r\n      } else {\r\n        setValue(original);\r\n        setTarget('');\r\n      }\r\n    }\r\n    if (e.key === 'Escape') {\r\n      setTarget('');\r\n      setValue(original);\r\n    }\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Field\r\n      value={value}\r\n      fnDBClick={editStartHandler}\r\n      handlerBlur={editStopBlurHandler}\r\n      handlerKeyDown={editStopKeyHandler}\r\n      handler={editHandler}\r\n      field={field}\r\n      name={name}\r\n      valueDefault={valueDefault}\r\n      target={target}\r\n    />\r\n  )\r\n};\r\n\r\nexport default FieldFilm;","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  NavLink,\r\n  Redirect,\r\n  useParams\r\n} from 'react-router-dom';\r\nimport Button from '../../../components/Button/Button';\r\nimport { getFieldsSelector, getFilmsSelector } from '../../../models/filmlist/selectors';\r\nimport useSelector from '../../../hooks/useSelector';\r\nimport FieldFilm from './FieldFilm';\r\n\r\n\r\nconst FilmContainer = styled.div`\r\n  width: 500px;\r\n  height: auto;\r\n  box-shadow: 0 0 18px 0 rgba(0, 0, 0, 0.75);\r\n  border-radius: 20px;\r\n  margin-right: 50px;\r\n  margin-top: 100px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Nav = styled(NavLink)`\r\n  text-decoration:none;\r\n  display: block;\r\n  color: #fff;\r\n`;\r\n\r\nconst Film = () => {\r\n  const id = useParams().id;\r\n  const films = useSelector(getFilmsSelector);\r\n  const ids = useSelector(getFieldsSelector)(id);\r\n  const fields = ids.map((item, i) => (\r\n    <FieldFilm\r\n      key={i}\r\n      id={id}\r\n      field={films[id].fields[i]}\r\n      name={item}\r\n      valueDefault={films[id][item]}\r\n      films={films}\r\n    />));\r\n  \r\n  \r\n  return (\r\n    <Fragment>\r\n      {Object.keys(films).includes(id)\r\n        ? <div>\r\n          <FilmContainer>\r\n            {fields}\r\n              <Button>\r\n                <Nav to = '/'>\r\n                  Закрыть окно\r\n                </Nav>\r\n              </Button>\r\n          </FilmContainer>\r\n        </div>\r\n        : <Redirect to='/' />}\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default Film;","import React, { Fragment, useEffect } from 'react';\r\nimport {\r\n  Redirect,\r\n  Route, Switch,\r\n} from 'react-router-dom';\r\n\r\nimport classes from './App.module.scss';\r\nimport useSelector from './hooks/useSelector';\r\nimport useAction from './hooks/useAction';\r\nimport routes, { FILM_PAGE, HOME_PAGE } from './routes';\r\n\r\nimport { GET_FILMS } from './models/filmlist/action';\r\nimport { getInitSelector } from './models/filmlist/selectors';\r\nimport HomePage from './pages/HomePage';\r\nimport Film from './pages/FilmPage/Film';\r\n\r\n\r\nconst App = () => {\r\n  const isInit = useSelector(getInitSelector);\r\n  const getFilms = useAction(GET_FILMS);\r\n  \r\n  useEffect(() => {\r\n    getFilms();\r\n  }, [getFilms]);\r\n  \r\n  \r\n  return (\r\n    <Fragment>\r\n      {isInit &&\r\n      <div className={classes.content}>\r\n        <Switch>\r\n          <Route path={HOME_PAGE} exact render={() => <HomePage />} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n        <Route path={FILM_PAGE} exact render={() => <Film />} />\r\n      </div>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export default original => JSON.parse(JSON.stringify(original));","export const removePropFromObject = (obj, id) => {\r\n  const res = { ...obj };\r\n  delete res[id];\r\n  return res;\r\n};","export const removeArrayElement = (obj, id) => {\r\n  const index = obj.indexOf(id);\r\n  obj.splice(index, 1);\r\n  return obj;\r\n};","import {\r\n  ADD_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  REMOVE_FILM,\r\n  SET_INIT,\r\n  UPDATE_FILM_FIELD_REDUCER\r\n} from './action';\r\nimport deepCopy from '../../utils/deepCopy';\r\nimport { removePropFromObject } from '../../utils/removePropFromObject';\r\nimport { removeArrayElement } from '../../utils/removeArrayElement';\r\n\r\nconst initialState = {\r\n  filmsList: [],\r\n  init: false,\r\n  isPost: false\r\n};\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    \r\n    case PUT_FILMS: {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        ...state, filmsList: {\r\n          entities, ids\r\n        }\r\n      }\r\n    }\r\n    \r\n    case ADD_FILM: {\r\n      const { id, payload } = action.payload;\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      entities[id] = payload;\r\n      ids.push(id);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          entities, ids\r\n        }\r\n      };\r\n    }\r\n    \r\n    \r\n    case REMOVE_FILM: {\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          ...state.filmsList,\r\n          entities: removePropFromObject(entities, action.payload),\r\n          ids: removeArrayElement(ids, action.payload)\r\n        }\r\n      };\r\n    }\r\n    \r\n    \r\n    case UPDATE_FILM_FIELD_REDUCER: {\r\n      const { id, obj } = action.payload;\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      entities[id] = obj;\r\n      return {\r\n        ...state,\r\n        filmsList: { entities, ids }\r\n      };\r\n    }\r\n    \r\n    \r\n    case POST_FILM_SUCCESS: {\r\n      return { ...state, isPost: action.payload };\r\n    }\r\n    \r\n    \r\n    case SET_INIT: {\r\n      return { ...state, init: true }\r\n    }\r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default filmsReducer;","import axios from \"axios\";\r\n\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: 'http://localhost:5000/'\r\n    });\r\n  }\r\n  \r\n  getFilms = () => {\r\n    return this.instance.get('filmsList');\r\n  };\r\n  \r\n  postCreateFilms = (film) => {\r\n    return this.instance.post(`filmsList`, film);\r\n  };\r\n  \r\n  deleteFilm = (id) => {\r\n    return this.instance.delete(`filmsList/${id}`);\r\n  };\r\n  \r\n  updateFilm = (id, film) => {\r\n    return this.instance.put(`filmsList/${id}`, film);\r\n  };\r\n}\r\n\r\nconst API = new Api();\r\n\r\nexport default API;\r\n","import {\r\n  call,\r\n  takeEvery,\r\n  put\r\n} from 'redux-saga/effects'\r\nimport {\r\n  normalize,\r\n  schema\r\n} from 'normalizr';\r\nimport API from '../../api/api';\r\nimport {\r\n  ADD_FILM,\r\n  DELETE_FILM,\r\n  GET_FILMS,\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  REMOVE_FILM,\r\n  SET_INIT, UPDATE_FILM_FIELD, UPDATE_FILM_FIELD_REDUCER\r\n} from './action';\r\n\r\n\r\nfunction* postFilm(action) {\r\n  try {\r\n    yield call(API.postCreateFilms, action.payload.payload);\r\n    yield put({\r\n      type: ADD_FILM, payload: {\r\n        id: action.payload.payload.id,\r\n        payload: action.payload.payload\r\n      }\r\n    });\r\n    yield put({\r\n      type: POST_FILM_SUCCESS,\r\n      payload: true\r\n    })\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* getFilms() {\r\n  try {\r\n    const payload = yield call(API.getFilms);\r\n    const filmsSchema = new schema.Entity('filmsList');\r\n    const filmsListSchema = [filmsSchema];\r\n    const dataNormalized = normalize(payload.data, filmsListSchema);\r\n    yield put({\r\n      type: PUT_FILMS,\r\n      payload: {\r\n        entities: dataNormalized.entities.filmsList || {},\r\n        ids: dataNormalized.result\r\n      }\r\n    });\r\n    yield put({ type: SET_INIT });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* deleteFilm(action) {\r\n  try {\r\n    yield call(API.deleteFilm, action.payload);\r\n    yield put({\r\n      type: REMOVE_FILM,\r\n      payload: action.payload\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* updateFilmField(action) {\r\n  try {\r\n    yield call(API.updateFilm, action.payload.id, action.payload.payload);\r\n    yield put({\r\n      type: UPDATE_FILM_FIELD_REDUCER,\r\n      payload: {\r\n        id: action.payload.id,\r\n        obj: action.payload.payload\r\n      }\r\n    })\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(POST_FILM, postFilm);\r\n  yield takeEvery(GET_FILMS, getFilms);\r\n  yield takeEvery(DELETE_FILM, deleteFilm);\r\n  yield takeEvery(UPDATE_FILM_FIELD, updateFilmField);\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport filmsReducer from '../models/filmlist/reducer';\r\nimport rootSaga from '../models/filmlist/sagas';\r\n\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst reducer = combineReducers(\r\n  {\r\n    films: filmsReducer\r\n  }\r\n);\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(saga)));\r\nsaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './state/Store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n</Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}