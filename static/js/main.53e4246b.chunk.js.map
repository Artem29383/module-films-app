{"version":3,"sources":["components/AddFilm/AddFilm.module.scss","components/Input/Input.module.scss","App.module.scss","pages/HomePage/HomePage.module.scss","components/Button/Button.module.scss","hooks/useSelector.js","models/filmlist/selectors.js","hooks/useAction.js","components/Input/Input.jsx","components/Button/Button.jsx","components/AddFilm/AddFilm.jsx","models/filmlist/action.js","routes.js","pages/HomePage/HomePage.jsx","App.js","models/filmlist/reducer.js","api/api.js","sagas/sagas.js","state/Store.js","index.js"],"names":["module","exports","func","params","useSelector","state","getIsPost","films","isPost","getInitSelector","createSelector","init","useAction","type","dispatch","useDispatch","useCallback","payload","Input","value","handler","desc","isError","className","classes","group","onChange","placeholder","frameInput","bar","label","error","Button","text","fn","btn","onClick","AddFilm","useState","isShow","setIsShow","name","setName","genre","setGenre","date","setDate","country","setCountry","setIsError","isDone","postFilm","setIsDone","nameHandler","e","currentTarget","genreHandler","dateHandler","countryHandler","useEffect","setTimeout","classnames","createdFilmFrame","show","frameContent","title","titleText","frameFields","green","trim","id","Date","now","fields","close","active","path","component","home","App","isInit","getFilms","routs","routes","map","Component","key","render","props","content","to","initialState","filmsList","filmsReducer","action","entities","ids","API","instance","get","postCreateFilms","film","post","this","axios","create","baseURL","rootSaga","call","put","console","log","filmsSchema","schema","Entity","filmsListSchema","dataNormalized","normalize","data","result","takeEvery","saga","createSagaMiddleware","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.53e4246b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createdFilmFrame\":\"AddFilm_createdFilmFrame__FJNSf\",\"show\":\"AddFilm_show__1cVIx\",\"title\":\"AddFilm_title__2Hdq8\",\"titleText\":\"AddFilm_titleText__3d4nP\",\"frameContent\":\"AddFilm_frameContent__2optG\",\"close\":\"AddFilm_close__Qxjj7\",\"active\":\"AddFilm_active__Z_2Cz\",\"frameFields\":\"AddFilm_frameFields__1yfj7\",\"error\":\"AddFilm_error__1iNV9\",\"green\":\"AddFilm_green__VG5b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frameInput\":\"Input_frameInput__1787G\",\"group\":\"Input_group__EgZ5C\",\"label\":\"Input_label__15E8K\",\"input\":\"Input_input__2Faqu\",\"bar\":\"Input_bar__3gCN7\",\"error\":\"Input_error__1s1uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1jzHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomePage_home__3TQdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__xh7zG\"};","import { useSelector } from 'react-redux';\r\n\r\nexport default (func, params = {}) => useSelector(state => func(state, params));","import { createSelector } from 'reselect';\r\n\r\nconst getInit = state => {\r\n  return state.films.init;\r\n};\r\n\r\nexport const getIsPost = state => {\r\n  return state.films.isPost;\r\n};\r\n\r\nexport const getInitSelector = createSelector([getInit], init => init);\r\n\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import React from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = ({\r\n  value,\r\n  handler,\r\n  desc,\r\n  isError\r\n}) => (\r\n  <div className={classes.group}>\r\n    <input\r\n      value={value}\r\n      onChange={handler}\r\n      placeholder=' '\r\n      className={classes.frameInput}\r\n      type=\"text\" />\r\n    <span className={classes.bar} />\r\n    <label className={classes.label}>{desc}</label>\r\n    {(isError && !value)\r\n    && <div className={classes.error}>\r\n      Заполните поле.\r\n    </div>}\r\n  </div>\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = ({ text, fn }) => (\r\n  <button className={classes.btn} onClick={fn}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React, { useCallback, useEffect, useState } from 'react';\r\nimport classes from './AddFilm.module.scss';\r\nimport classnames from 'classnames';\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\nimport useSelector from '../../hooks/useSelector';\r\nimport { getIsPost } from '../../models/filmlist/selectors';\r\nimport useAction from '../../hooks/useAction';\r\nimport {\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS\r\n} from '../../models/filmlist/action';\r\n\r\n\r\nconst AddFilm = () => {\r\n  \r\n  const [isShow, setIsShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  const isDone = useSelector(getIsPost);\r\n  const postFilm = useAction(POST_FILM);\r\n  const setIsDone = useAction(POST_FILM_SUCCESS);\r\n  \r\n  const showHandler = () => {\r\n    setIsShow(!isShow);\r\n    if (isShow) {\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    }\r\n  };\r\n  \r\n  const nameHandler = useCallback(e => {\r\n    setName(e.currentTarget.value);\r\n  }, [setName]);\r\n  \r\n  const genreHandler = useCallback(e => {\r\n    setGenre(e.currentTarget.value);\r\n  }, [setGenre]);\r\n  \r\n  const dateHandler = useCallback(e => {\r\n    setDate(e.currentTarget.value);\r\n  }, [setDate]);\r\n  \r\n  const countryHandler = useCallback(e => {\r\n    setCountry(e.currentTarget.value);\r\n  }, [setCountry]);\r\n  \r\n  const sumbitHandler = () => {\r\n    if (name.trim() && genre.trim() && date.trim() && country.trim()) {\r\n      const id = Date.now();\r\n      postFilm({\r\n        id, payload: {\r\n          id, name, genre, date, country, fields: [\r\n            'Название', 'Жанр', 'Дата выхода', 'Страна'\r\n          ]\r\n        }\r\n      });\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isError) {\r\n      setTimeout(() => setIsError(false), 2000);\r\n    }\r\n    if (isDone) {\r\n      setTimeout(() => setIsDone(false), 2000);\r\n    }\r\n  }, [isError, isDone, setIsDone]);\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        classes.createdFilmFrame,\r\n        isShow && classes.show)\r\n      }>\r\n      <div className={classes.frameContent}>\r\n        <div className={classes.title}>\r\n          <div className={classes.titleText}>\r\n            Добавить фильм\r\n          </div>\r\n        </div>\r\n        <div className={classes.frameFields}>\r\n          <Input isError={isError} value={name} handler={nameHandler} desc='Название' />\r\n          <Input isError={isError} value={genre} handler={genreHandler} desc='Жанр' />\r\n          <Input isError={isError} value={date} handler={dateHandler} desc='Дата выхода' />\r\n          <Input isError={isError} value={country} handler={countryHandler} desc='Страна выпуска' />\r\n          {isDone &&\r\n          <div className={classnames(\r\n            classes.error,\r\n            classes.green\r\n          )}>\r\n            Фильм добавлен.\r\n          </div>}\r\n        </div>\r\n        <Button text='Добавить фильм' fn={sumbitHandler} />\r\n        <span\r\n          className={classnames(\r\n            classes.close,\r\n            isShow && classes.active)\r\n          }\r\n          onClick={showHandler}>\r\n            ✖\r\n          </span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddFilm;","export const POST_FILM = 'POST_FILM';\r\nexport const POST_FILM_SUCCESS = 'POST_FILM_SUCCESS';\r\nexport const GET_FILMS = 'GET_FILMS';\r\nexport const PUT_FILMS = 'PUT_FILMS';\r\nexport const SET_INIT = 'SET_INIT';","import HomePage from './pages/HomePage';\r\n\r\nexport default [{\r\n  path: '/',\r\n  component: HomePage\r\n}]","import React from 'react';\r\nimport classes from './HomePage.module.scss';\r\nimport AddFilm from '../../components/AddFilm';\r\n\r\n\r\nconst HomePage = () => {\r\n  \r\n  \r\n  return (\r\n    <div className={classes.home}>\r\n      <AddFilm />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;","import React, { Fragment, useEffect } from 'react';\nimport {\n  Redirect,\n  Route,\n} from 'react-router-dom';\nimport classes from './App.module.scss';\nimport useSelector from './hooks/useSelector';\nimport { getInitSelector } from './models/filmlist/selectors';\nimport useAction from './hooks/useAction';\nimport { GET_FILMS } from './models/filmlist/action';\nimport routes from './routes';\n\nconst App = () => {\n  const isInit = useSelector(getInitSelector);\n  const getFilms = useAction(GET_FILMS);\n  \n  useEffect(() => {\n    getFilms();\n  }, [getFilms]);\n  \n  \n  const routs = routes.map(({ path, component: Component }) => {\n      return (\n        <Route\n          key={path}\n          path={path}\n          render={props => <Component {...props} />}\n        />\n      )\n    }\n  );\n  \n  \n  return (\n    <Fragment>\n      {isInit &&\n      <div className={classes.content}>\n        {routs}\n        <Redirect to='/' />\n      </div>\n      }\n    </Fragment>\n  );\n};\n\nexport default App;\n","import {\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  SET_INIT\r\n} from './action';\r\n\r\nconst initialState = {\r\n  filmsList: [],\r\n  init: false,\r\n  isPost: false\r\n};\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    \r\n    case PUT_FILMS: {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        ...state, filmsList: {\r\n          entities, ids\r\n        }\r\n      }\r\n    }\r\n    \r\n    \r\n    case POST_FILM_SUCCESS: {\r\n      return { ...state, isPost: action.payload };\r\n    }\r\n    \r\n    \r\n    case SET_INIT: {\r\n      return {\r\n        ...state, init: true\r\n      }\r\n    }\r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default filmsReducer;","import axios from \"axios\";\r\n\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: 'http://localhost:5000/'\r\n    });\r\n  }\r\n  \r\n  getFilms = () => {\r\n    return this.instance.get('filmsList');\r\n  };\r\n  \r\n  postCreateFilms = (id, film) => {\r\n    return this.instance.post(`filmsList`, film);\r\n  };\r\n}\r\n\r\nconst API = new Api();\r\n\r\nexport default API;\r\n","import API from '../api/api';\r\nimport {\r\n  call,\r\n  takeEvery,\r\n  put\r\n} from 'redux-saga/effects'\r\nimport {\r\n  GET_FILMS,\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  SET_INIT\r\n} from '../models/filmlist/action';\r\nimport {\r\n  normalize,\r\n  schema\r\n} from 'normalizr';\r\n\r\nfunction* postFilm(action) {\r\n  try {\r\n    yield call(API.postCreateFilms, action.payload.id, action.payload.payload);\r\n    yield put({\r\n      type: POST_FILM_SUCCESS,\r\n      payload: true\r\n    })\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* getFilms() {\r\n  try {\r\n    const payload = yield call(API.getFilms);\r\n    const filmsSchema = new schema.Entity('filmsList');\r\n    const filmsListSchema = [filmsSchema];\r\n    const dataNormalized = normalize(payload.data, filmsListSchema);\r\n    yield put({\r\n      type: PUT_FILMS,\r\n      payload: {\r\n        entities: dataNormalized.entities.filmsList,\r\n        ids: dataNormalized.result\r\n      }\r\n    });\r\n    yield put({ type: SET_INIT });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(POST_FILM, postFilm);\r\n  yield takeEvery(GET_FILMS, getFilms);\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from 'redux';\r\nimport filmsReducer from '../models/filmlist/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas/sagas';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst reducer = combineReducers(\r\n  {\r\n    films: filmsReducer\r\n  }\r\n);\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(saga)));\r\nsaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './state/Store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</Provider>, document.getElementById('root'));\n"],"sourceRoot":""}