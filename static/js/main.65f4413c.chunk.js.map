{"version":3,"sources":["hooks/useAction.js","components/Input/Input.styled.js","components/Input/Input.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","hooks/useSelector.js","models/filmlist/selectors.js","pages/HomePage/AddFilm/AddFilm.jsx","models/filmlist/action.js","pages/HomePage/FilmsList/FilmItem/FilmItem.jsx","pages/HomePage/FilmsList/FilmsList.jsx","utils/isEmpty.js","pages/HomePage/HomePage.jsx","pages/FilmPage/FieldFilm/Field/Field.styled.js","pages/FilmPage/FieldFilm/Field/Field.jsx","models/currentFilm/action.js","pages/FilmPage/FieldFilm/FieldFilm.jsx","pages/FilmPage/FilmPage.styled.js","models/currentFilm/selectors.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/FilmPage/FilmPage.jsx","App.js","routes.js","utils/deepCopy.js","utils/removePropFromObject.js","utils/removeArrayElement.js","models/filmlist/reducer.js","models/currentFilm/reducer.js","api/api.js","models/filmlist/sagas.js","models/currentFilm/sagas.js","state/rootSaga.js","state/Store.js","index.js","pages/HomePage/AddFilm/AddFilm.module.scss","pages/HomePage/FilmsList/FilmItem/FilmItem.module.scss","pages/HomePage/FilmsList/FilmsList.module.scss","App.module.scss","pages/HomePage/HomePage.module.scss"],"names":["useAction","type","dispatch","useDispatch","useCallback","payload","Label","styled","label","Bar","div","Group","InputField","input","Error","memo","value","handler","blur","keyDown","desc","isError","focus","onChange","onBlur","onKeyDown","placeholder","autoFocus","Btn","button","children","clickHandler","onClick","func","params","useSelector","state","getIsPost","films","isPost","getFilms","filmsList","entities","getFilmsSelector","createSelector","init","getFilteredItems","ids","memoize","search","filter","item","name","toLowerCase","includes","AddFilm","useState","isShow","setIsShow","setName","genre","setGenre","date","setDate","country","setCountry","setIsError","isDone","postFilm","setIsDone","nameHandler","e","currentTarget","genreHandler","dateHandler","countryHandler","useEffect","setTimeout","theme","collapse","classes","reactCollapse","content","classnames","createdFilmFrame","show","isOpened","className","title","titleText","frameFields","field","error","green","btn","trim","id","Date","now","fields","close","active","removeFilmHandler","to","filmsItem","removeBtn","FilmsList","history","useHistory","setSearch","filteredFilms","searchStr","queryString","parse","location","isSearch","removeFilm","searchHandler","push","map","key","filmsContainer","HomePage","home","StyledValue","WrapField","Field","valueDefault","isEdit","setIsEdit","setValue","updateFieldFilm","target","setTarget","editHandler","onDoubleClick","getAttribute","data-name","FilmContainer","Nav","NavLink","getStatusLoading","film","isLoading","getFilmSelector","getFieldsSelector","Object","keys","keyFrames","keyframes","LoaderComponent","Loader","FilmPage","getCurrentFilm","setLoading","useParams","Number","i","App","path","exact","render","original","JSON","stringify","removePropFromObject","obj","res","removeArrayElement","index","indexOf","splice","initialState","filmsReducer","action","deepCopy","filmReducer","API","instance","get","getFilm","postCreateFilms","post","deleteFilm","delete","updateFilm","put","this","axios","create","baseURL","rootSagaFilmsList","call","console","log","filmsSchema","schema","Entity","filmsListSchema","dataNormalized","normalize","data","result","takeEvery","updateFilmField","rootSagaFilm","rootSaga","all","createBrowserHistory","saga","createSagaMiddleware","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","run","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.65f4413c.chunk.js","sourcesContent":["import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n  pointer-events: none;\r\n  color: #999;\r\n  position: absolute;\r\n  left: 30px;\r\n  top: 25px;\r\n  transition: 0.2s ease all;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  position: absolute;\r\n  height: 3px;\r\n  content: '';\r\n  transform: rotateY(90deg);\r\n  transition: transform .2s linear;\r\n  background-color: #ea5a5a;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport default {\r\n  Group: styled.div`\r\n  position: relative;\r\n`,\r\n  Label,\r\n  Bar,\r\n  InputField: styled.input`\r\n  border: none;\r\n  background-color: transparent;\r\n  width: 100%;\r\n  font-size: 22px;\r\n  padding-left: 15px;\r\n  padding-bottom: 7px;\r\n  border-bottom: 2px solid #999;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  &:focus ~ ${Label}, &:not(:placeholder-shown) ~ ${Label} {\r\n  top: -5px;\r\n  color: #ea5a5a;\r\n  }\r\n  &:focus ~ ${Bar}, &:not(:placeholder-shown) ~ ${Bar} {\r\n  transform: rotateY(0deg);\r\n  }\r\n`,\r\n  Error: styled.div`\r\n  position: absolute;\r\n  font-family: Helvetica_Medium;\r\n  font-size: 16px;\r\n  color: red;\r\n  bottom: -45%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`\r\n}\r\n","import React, { memo } from 'react';\r\nimport S from './Input.styled';\r\n\r\nconst Input = ({\r\n  value,\r\n  handler,\r\n  blur,\r\n  keyDown,\r\n  desc,\r\n  isError,\r\n  focus = false\r\n}) => (\r\n  <S.Group>\r\n    <S.InputField\r\n      value={value}\r\n      onChange={handler}\r\n      onBlur = {blur}\r\n      onKeyDown = {keyDown}\r\n      placeholder=' '\r\n      type=\"text\"\r\n      autoFocus = {focus}\r\n    />\r\n    <S.Bar />\r\n    <S.Label>{desc}</S.Label>\r\n    {(isError && !value)\r\n    && <S.Error>\r\n      Заполните поле.\r\n    </S.Error>}\r\n  </S.Group>\r\n);\r\n\r\nexport default memo(Input);","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n  background: #ea5a5a;\r\n  text-transform: uppercase;\r\n  max-width: 160px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  line-height: 2.5;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  font-family: Helvetica_Bold;\r\n  border-radius: 20px;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n`;","import React, { memo } from 'react';\r\nimport { Btn } from './Button.styled';\r\n\r\n\r\nconst Button = ({ children, clickHandler }) => (\r\n  <Btn onClick={clickHandler}>\r\n    {children}\r\n  </Btn>\r\n);\r\n\r\nexport default memo(Button);","import { useSelector } from 'react-redux';\r\n\r\nexport default (func, params = {}) => useSelector(state => func(state, params));","import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst getInit = state => {\r\n  return state.films.init;\r\n};\r\n\r\nexport const getIsPost = state => {\r\n  return state.films.isPost;\r\n};\r\n\r\nconst getFilms = state => {\r\n  return state.films.filmsList.entities;\r\n};\r\n\r\nconst getIds = state => {\r\n  return state.films.filmsList.ids;\r\n};\r\n\r\nexport const getInitSelector = createSelector([getInit], init => init);\r\n\r\nexport const getFilmsSelector = createSelector([getFilms], films => films);\r\n\r\nexport const getFilteredItems = createSelector([getFilms, getIds], (films, ids) => {\r\n  return memoize(search => {\r\n    return ids.filter(item => (films[item].name.toLowerCase().includes(search.toLowerCase())));\r\n  })\r\n});","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Collapse } from 'react-collapse';\r\nimport classnames from 'classnames';\r\nimport classes from './AddFilm.module.scss';\r\nimport Input from '../../../components/Input/Input';\r\nimport Button from '../../../components/Button/Button';\r\nimport useSelector from '../../../hooks/useSelector';\r\nimport { getIsPost } from '../../../models/filmlist/selectors';\r\nimport useAction from '../../../hooks/useAction';\r\nimport {\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS\r\n} from '../../../models/filmlist/action';\r\n\r\n\r\nconst AddFilm = () => {\r\n  \r\n  const [isShow, setIsShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  const isDone = useSelector(getIsPost);\r\n  const postFilm = useAction(POST_FILM);\r\n  const setIsDone = useAction(POST_FILM_SUCCESS);\r\n  \r\n  const showHandler = () => {\r\n    setIsShow(!isShow);\r\n    if (isShow) {\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    }\r\n  };\r\n  \r\n  const nameHandler = useCallback(e => {\r\n    setName(e.currentTarget.value);\r\n  }, [setName]);\r\n  \r\n  const genreHandler = useCallback(e => {\r\n    setGenre(e.currentTarget.value);\r\n  }, [setGenre]);\r\n  \r\n  const dateHandler = useCallback(e => {\r\n    setDate(e.currentTarget.value);\r\n  }, [setDate]);\r\n  \r\n  const countryHandler = useCallback(e => {\r\n    setCountry(e.currentTarget.value);\r\n  }, [setCountry]);\r\n  \r\n  const sumbitHandler = () => {\r\n    if (name.trim() && genre.trim() && date.trim() && country.trim()) {\r\n      const id = Date.now();\r\n      postFilm({\r\n        payload: {\r\n          id, name, genre, date, country,\r\n          fields: [\r\n            'Название', 'Жанр', 'Дата выхода', 'Страна'\r\n          ]\r\n        }\r\n      });\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isError) {\r\n      setTimeout(() => setIsError(false), 2000);\r\n    }\r\n    if (isDone) {\r\n      setTimeout(() => setIsDone(false), 2000);\r\n    }\r\n  }, [isError, isDone, setIsDone]);\r\n  \r\n  const theme = {\r\n    collapse: `${classes.reactCollapse}`,\r\n    content: `${classnames(\r\n      classes.createdFilmFrame,\r\n      isShow && classes.show)}`\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Collapse isOpened={true} theme={theme}>\r\n      <div className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          Добавить фильм\r\n        </div>\r\n      </div>\r\n      <div className={classes.frameFields}>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={name} handler={nameHandler} desc='Название' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={genre} handler={genreHandler} desc='Жанр' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={date} handler={dateHandler} desc='Дата выхода' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={country} handler={countryHandler} desc='Страна выпуска' />\r\n        </div>\r\n        {isDone &&\r\n        <div className={classnames(\r\n          classes.error,\r\n          classes.green\r\n        )}>\r\n          Фильм добавлен.\r\n        </div>}\r\n      </div>\r\n      <div className={classes.btn}>\r\n        <Button clickHandler={sumbitHandler}>Добавить фильм</Button>\r\n      </div>\r\n      <div\r\n        className={classnames(\r\n          classes.close,\r\n          isShow && classes.active)\r\n        }\r\n        onClick={showHandler} />\r\n    </Collapse>\r\n  )\r\n};\r\n\r\nexport default AddFilm;","export const POST_FILM = 'POST_FILM';\r\n\r\nexport const POST_FILM_SUCCESS = 'POST_FILM_SUCCESS';\r\n\r\nexport const ADD_FILM = 'ADD_FILM';\r\n\r\nexport const GET_FILMS = 'GET_FILMS';\r\n\r\nexport const PUT_FILMS = 'PUT_FILMS';\r\n\r\nexport const DELETE_FILM = 'DELETE_FILM';\r\n\r\nexport const DELETE_FILM_SUCCESS = 'DELETE_FILM_SUCCESS';\r\n\r\nexport const UPDATE_FILMS_SUCCESS = 'UPDATE_FILM_FIELD_SUCCESS';","import React, { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './FilmItem.module.scss';\r\n\r\nconst FilmItem = ({ id, films, removeFilmHandler }) => {\r\n  \r\n  const removeFilm = () => {\r\n    removeFilmHandler(id);\r\n  };\r\n  \r\n  return (\r\n    <li className={classes.item}>\r\n      <NavLink\r\n        to={`/films/${id}`}\r\n        className={classes.filmsItem}\r\n      >\r\n        <div className={classes.title}>\r\n        <span className={classes.titleText}>\r\n          {films[id].name}\r\n        </span>\r\n        </div>\r\n      </NavLink>\r\n      <NavLink to='/' className={classes.removeBtn} onClick={removeFilm} />\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default memo(FilmItem);","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Input from '../../../components/Input/Input';\r\nimport classes from './FilmsList.module.scss';\r\nimport useSelector from '../../../hooks/useSelector';\r\nimport {\r\n  getFilmsSelector,\r\n  getFilteredItems\r\n} from '../../../models/filmlist/selectors';\r\nimport useAction from '../../../hooks/useAction';\r\nimport { DELETE_FILM } from '../../../models/filmlist/action';\r\nimport { isEmpty } from '../../../utils/isEmpty';\r\nimport FilmItem from './FilmItem/FilmItem';\r\n\r\nconst FilmsList = () => {\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState('');\r\n  const films = useSelector(getFilmsSelector);\r\n  const filteredFilms = useSelector(getFilteredItems)(search);\r\n  const searchStr = queryString.parse(history.location.search).search || '';\r\n  const isSearch = isEmpty(searchStr);\r\n  const removeFilm = useAction(DELETE_FILM);\r\n  \r\n  \r\n  const searchHandler = useCallback(e => {\r\n    const {value} = e.currentTarget;\r\n    if (value.trim()) {\r\n      setSearch(value);\r\n      history.push(`/?search=${value.toLowerCase()}`);\r\n    } else {\r\n      setSearch('');\r\n      history.push('/');\r\n    }\r\n  }, [setSearch, history]);\r\n  \r\n  \r\n  const removeFilmHandler = (id) => {\r\n    removeFilm(id);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isSearch) {\r\n      setSearch(searchStr);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!isSearch && search) {\r\n      setSearch('');\r\n    }\r\n  }, [isSearch, search]);\r\n  \r\n  const filmsList = filteredFilms.map(id =>\r\n    <FilmItem\r\n      key = {id}\r\n      id = {id}\r\n      films = {films}\r\n      removeFilmHandler={removeFilmHandler}\r\n    />);\r\n  \r\n  \r\n  return (\r\n    <div className={classes.filmsContainer}>\r\n      <div className={classes.search}>\r\n        <Input value={search} handler={searchHandler} desc='Введите название фильма' />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <ul>\r\n          {filmsList}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default FilmsList;\r\n","export const isEmpty = str => str.trim() !== '';","import React from 'react';\r\nimport classes from './HomePage.module.scss';\r\nimport AddFilm from './AddFilm';\r\nimport FilmsList from './FilmsList';\r\n\r\n\r\nconst HomePage = () => {\r\n  \r\n  \r\n  return (\r\n    <div className={classes.home}>\r\n      <AddFilm />\r\n      <FilmsList />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;","import styled from 'styled-components';\r\n\r\nexport default {\r\n  Group: styled.div`\r\n  position: relative;\r\n`,\r\n  StyledValue: styled.div`\r\n  font-size: 22px;\r\n  color: #444;\r\n  word-break: break-word;\r\n  border-bottom: 2px solid #444;\r\n  width: 100%;\r\n  padding: 30px 0 7px 15px;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n`,\r\n  WrapField: styled.div`\r\n  padding: 0 55px;\r\n`,\r\n  Bar: styled.div`\r\n  position: absolute;\r\n  height: 3px;\r\n  content: '';\r\n  transform: rotateY(90deg);\r\n  transition: transform .2s linear;\r\n  background-color: #ea5a5a;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n`\r\n}","import React, { useCallback, useState } from 'react';\r\n\r\nimport Input from '../../../../components/Input/Input';\r\nimport S from './Field.styled';\r\nimport useAction from '../../../../hooks/useAction';\r\nimport useSelector from '../../../../hooks/useSelector';\r\nimport { getFilmsSelector } from '../../../../models/filmlist/selectors';\r\nimport { UPDATE_FILM_FIELD } from '../../../../models/currentFilm/action';\r\n\r\n\r\nconst Field = ({\r\n  name,\r\n  field,\r\n  valueDefault,\r\n  id\r\n}) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [value, setValue] = useState('');\r\n  const updateFieldFilm = useAction(UPDATE_FILM_FIELD);\r\n  const [target, setTarget] = useState('');\r\n  const films = useSelector(getFilmsSelector);\r\n  \r\n  const editStartHandler = e => {\r\n    setValue(valueDefault);\r\n    setTarget(e.currentTarget.getAttribute('data-name'));\r\n    setIsEdit(true);\r\n  };\r\n  \r\n  \r\n  const editStopBlurHandler = () => {\r\n    if (value.trim() && value !== valueDefault) {\r\n      updateFieldFilm({\r\n        id,\r\n        payload: { ...films[id], [target]: value }\r\n      });\r\n    } else {\r\n      setValue(valueDefault);\r\n    }\r\n    setIsEdit(false);\r\n  };\r\n  \r\n  const editHandler = useCallback(e => {\r\n    setValue(e.currentTarget.value);\r\n  }, [setValue]);\r\n  \r\n  const editStopKeyHandler = e => {\r\n    if (e.key === 'Enter') {\r\n      if (value !== valueDefault && value.trim()) {\r\n        updateFieldFilm({\r\n          id,\r\n          payload: { ...films[id], [target]: value }\r\n        });\r\n      } else {\r\n        setValue(valueDefault);\r\n      }\r\n      setIsEdit(false);\r\n    }\r\n    if (e.key === 'Escape') {\r\n      setIsEdit(false);\r\n      setValue(valueDefault);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <S.Group>\r\n      <S.WrapField>\r\n        {(!isEdit)\r\n          ? <S.StyledValue\r\n            onDoubleClick={editStartHandler}\r\n            data-name={name}\r\n          >\r\n            {field}: {valueDefault}\r\n          </S.StyledValue>\r\n          : <Input\r\n            value={value}\r\n            handler={editHandler}\r\n            type=\"text\"\r\n            blur={editStopBlurHandler}\r\n            keyDown={editStopKeyHandler}\r\n            focus={true}\r\n          />}\r\n      </S.WrapField>\r\n      <S.Bar />\r\n    </S.Group>\r\n  )\r\n};\r\n\r\nexport default Field;","export const GET_FILM = 'GET_FILM';\r\n\r\nexport const GET_FILM_SUCCESS = 'GET_FILM_SUCCESS';\r\n\r\nexport const SET_LOADING_FILM = 'SET_LOADING_FILM';\r\n\r\nexport const UPDATE_FILM_FIELDS_SUCCESS = 'UPDATE_FILM_FIELDS_SUCCESS';\r\n\r\nexport const UPDATE_FILM_FIELD = 'UPDATE_FILM_FIELD';\r\n","import React, { memo } from 'react';\r\nimport Field from './Field';\r\n\r\n\r\nconst FieldFilm = ({\r\n  id,\r\n  field,\r\n  valueDefault,\r\n  name,\r\n}) => {\r\n  return (\r\n    <Field\r\n      field={field}\r\n      name={name}\r\n      valueDefault={valueDefault}\r\n      id={id}\r\n    />\r\n  )\r\n};\r\n\r\nexport default memo(FieldFilm);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default {\r\n  FilmContainer: styled.div`\r\n  width: 500px;\r\n  height: auto;\r\n  box-shadow: 0 0 18px 0 rgba(0, 0, 0, 0.75);\r\n  border-radius: 20px;\r\n  padding-bottom: 30px;\r\n`,\r\n  Nav: styled(NavLink)`\r\n  text-decoration: none;\r\n  display: block;\r\n  color: #fff;\r\n`\r\n}","import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nexport const getStatusLoading = state => {\r\n  return state.film.isLoading;\r\n};\r\n\r\nexport const getFilmSelector = state => {\r\n  return state.film.film;\r\n};\r\n\r\nexport const getFieldsSelector = createSelector([getFilmSelector], (film) => {\r\n  return memoize(() => {\r\n    return Object.keys(film || []).filter(value => (value !== 'id' && value !== 'fields'));\r\n  });\r\n});","import styled, { keyframes } from 'styled-components';\r\n\r\n\r\nconst keyFrames = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LoaderComponent = styled.div`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80px;\r\n  height: 80px;\r\n &:after {\r\n  content: \" \";\r\n  display: block;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 8px;\r\n  border-radius: 50%;\r\n  border: 6px solid #ea5a5a;\r\n  border-color: #ea5a5a transparent #ea5a5a transparent;\r\n  animation: ${keyFrames} 1.2s linear infinite;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { LoaderComponent } from './Loader.styled';\r\n\r\n\r\n\r\nconst Loader = () => <LoaderComponent />;\r\n\r\nexport default Loader","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Button from '../../components/Button/Button';\r\nimport useSelector from '../../hooks/useSelector';\r\nimport FieldFilm from './FieldFilm';\r\nimport S from './FilmPage.styled';\r\nimport {\r\n  getFieldsSelector,\r\n  getFilmSelector,\r\n  getStatusLoading\r\n} from '../../models/currentFilm/selectors';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport useAction from '../../hooks/useAction';\r\nimport { GET_FILM, SET_LOADING_FILM } from '../../models/currentFilm/action';\r\n\r\n\r\nconst FilmPage = () => {\r\n  const isLoading = useSelector(getStatusLoading);\r\n  const getCurrentFilm = useAction(GET_FILM);\r\n  const setLoading = useAction(SET_LOADING_FILM);\r\n  const id = useParams().id;\r\n  const ids = useSelector(getFieldsSelector)();\r\n  const film = useSelector(getFilmSelector);\r\n  \r\n  const getFilm = () => {\r\n      if (film.id !== Number(id)) {\r\n        setLoading(true);\r\n        getCurrentFilm(id);\r\n      }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getFilm();\r\n  }, []);\r\n  \r\n  \r\n  if (isLoading) return <Loader />;\r\n  const fields = ids.map((item, i) => (\r\n    <FieldFilm\r\n      key={i}\r\n      id={id}\r\n      name = {item}\r\n      field={film.fields[i]}\r\n      valueDefault={film[item]}\r\n    />));\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  return (\r\n    <S.FilmContainer>\r\n      {fields}\r\n      <Button>\r\n        <S.Nav to='/'>\r\n          Закрыть окно\r\n        </S.Nav>\r\n      </Button>\r\n    </S.FilmContainer>\r\n  )\r\n};\r\n\r\nexport default FilmPage;","import React, { useEffect } from 'react';\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport classes from './App.module.scss';\r\nimport useAction from './hooks/useAction';\r\nimport { FILM_PAGE, HOME_PAGE } from './routes';\r\nimport { GET_FILMS } from './models/filmlist/action';\r\nimport HomePage from './pages/HomePage';\r\nimport FilmPage from './pages/FilmPage';\r\n\r\n\r\nconst App = () => {\r\n  const getFilms = useAction(GET_FILMS);\r\n  \r\n  useEffect(() => {\r\n    getFilms();\r\n  }, [getFilms]);\r\n  \r\n  \r\n  return (\r\n      <div className={classes.content}>\r\n        <Switch>\r\n          <Route path={HOME_PAGE} exact render={() => <HomePage />} />\r\n          <Route path={FILM_PAGE} render={() => <FilmPage />} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const HOME_PAGE = '/';\r\nexport const FILM_PAGE = '/films/:id';","export default original => JSON.parse(JSON.stringify(original));","export const removePropFromObject = (obj, id) => {\r\n  const res = { ...obj };\r\n  delete res[id];\r\n  return res;\r\n};","export const removeArrayElement = (obj, id) => {\r\n  const index = obj.indexOf(id);\r\n  obj.splice(index, 1);\r\n  return obj;\r\n};","import {\r\n  ADD_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  DELETE_FILM_SUCCESS,\r\n  UPDATE_FILMS_SUCCESS\r\n} from './action';\r\nimport deepCopy from '../../utils/deepCopy';\r\nimport { removePropFromObject } from '../../utils/removePropFromObject';\r\nimport { removeArrayElement } from '../../utils/removeArrayElement';\r\n\r\nconst initialState = {\r\n  filmsList: {\r\n    entities: [],\r\n    ids: []\r\n  },\r\n  isPost: false\r\n};\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    \r\n    case PUT_FILMS: {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          entities, ids\r\n        }\r\n      }\r\n    }\r\n    \r\n    case ADD_FILM: {\r\n      const { id, payload } = action.payload;\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      entities[id] = payload;\r\n      ids.push(id);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          entities, ids\r\n        }\r\n      };\r\n    }\r\n    \r\n    \r\n    case DELETE_FILM_SUCCESS: {\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          ...state.filmsList,\r\n          entities: removePropFromObject(entities, action.payload),\r\n          ids: removeArrayElement(ids, action.payload)\r\n        }\r\n      };\r\n    }\r\n    \r\n    \r\n    case UPDATE_FILMS_SUCCESS: {\r\n      const { id, obj } = action.payload;\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      entities[id] = obj;\r\n      return {\r\n        ...state,\r\n        filmsList: { entities, ids }\r\n      };\r\n    }\r\n    \r\n    \r\n    case POST_FILM_SUCCESS: {\r\n      return { ...state, isPost: action.payload };\r\n    }\r\n    \r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default filmsReducer;","import {\r\n  GET_FILM_SUCCESS,\r\n  SET_LOADING_FILM,\r\n  UPDATE_FILM_FIELDS_SUCCESS\r\n} from './action';\r\n\r\nconst initialState = {\r\n  film: {},\r\n  isLoading: false,\r\n};\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  \r\n    case GET_FILM_SUCCESS: {\r\n      return  {...state, film: action.payload, isLoading: false};\r\n    }\r\n    \r\n    case SET_LOADING_FILM: {\r\n      return {...state, isLoading: action.payload}\r\n    }\r\n    \r\n  \r\n    case UPDATE_FILM_FIELDS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        film: action.payload\r\n      };\r\n    }\r\n    \r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default filmReducer;","import axios from \"axios\";\r\n\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: 'http://localhost:5000/'\r\n    });\r\n  }\r\n  \r\n  getFilms = () => {\r\n    return this.instance.get('filmsList');\r\n  };\r\n  \r\n  getFilm = id => {\r\n    return this.instance.get(`filmsList/${id}`);\r\n  };\r\n  \r\n  postCreateFilms = (film) => {\r\n    return this.instance.post(`filmsList`, film);\r\n  };\r\n  \r\n  deleteFilm = (id) => {\r\n    return this.instance.delete(`filmsList/${id}`);\r\n  };\r\n  \r\n  updateFilm = (id, film) => {\r\n    return this.instance.put(`filmsList/${id}`, film);\r\n  };\r\n}\r\n\r\nconst API = new Api();\r\n\r\nexport default API;\r\n","import {\r\n  call,\r\n  takeEvery,\r\n  put\r\n} from 'redux-saga/effects'\r\nimport {\r\n  normalize,\r\n  schema\r\n} from 'normalizr';\r\nimport API from '../../api/api';\r\nimport {\r\n  ADD_FILM,\r\n  DELETE_FILM,\r\n  GET_FILMS,\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  DELETE_FILM_SUCCESS,\r\n} from './action';\r\n\r\n\r\nfunction* postFilm(action) {\r\n  try {\r\n    yield call(API.postCreateFilms, action.payload.payload);\r\n    yield put({\r\n      type: ADD_FILM,\r\n      payload: {\r\n        id: action.payload.payload.id,\r\n        payload: action.payload.payload\r\n      }\r\n    });\r\n    yield put({\r\n      type: POST_FILM_SUCCESS,\r\n      payload: true\r\n    })\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* getFilms() {\r\n  try {\r\n    const payload = yield call(API.getFilms);\r\n    const filmsSchema = new schema.Entity('filmsList');\r\n    const filmsListSchema = [filmsSchema];\r\n    const dataNormalized = normalize(payload.data, filmsListSchema);\r\n    yield put({\r\n      type: PUT_FILMS,\r\n      payload: {\r\n        entities: dataNormalized.entities.filmsList || {},\r\n        ids: dataNormalized.result\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* deleteFilm(action) {\r\n  try {\r\n    yield call(API.deleteFilm, action.payload);\r\n    yield put({\r\n      type: DELETE_FILM_SUCCESS,\r\n      payload: action.payload\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* rootSagaFilmsList() {\r\n  yield takeEvery(POST_FILM, postFilm);\r\n  yield takeEvery(GET_FILMS, getFilms);\r\n  yield takeEvery(DELETE_FILM, deleteFilm);\r\n}\r\n","import API from '../../api/api';\r\nimport { takeEvery, call, put } from '@redux-saga/core/effects';\r\nimport {\r\n  GET_FILM,\r\n  GET_FILM_SUCCESS,\r\n  SET_LOADING_FILM, UPDATE_FILM_FIELD,\r\n  UPDATE_FILM_FIELDS_SUCCESS\r\n} from './action';\r\nimport { push } from 'connected-react-router'\r\nimport { UPDATE_FILMS_SUCCESS } from '../filmlist/action';\r\n\r\n\r\nfunction* getFilm(action) {\r\n  try {\r\n    const payload = yield call(API.getFilm, action.payload);\r\n    \r\n    yield put({\r\n      type: GET_FILM_SUCCESS,\r\n      payload: payload.data\r\n    });\r\n  } catch (e) {\r\n    yield put(push('/'));\r\n    yield put({\r\n      type: SET_LOADING_FILM,\r\n      payload: false\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* updateFilmField(action) {\r\n  try {\r\n    yield call(API.updateFilm, action.payload.id, action.payload.payload);\r\n    \r\n    yield put({\r\n      type: UPDATE_FILMS_SUCCESS,\r\n      payload: {\r\n        id: action.payload.id,\r\n        obj: action.payload.payload\r\n      }\r\n    });\r\n    \r\n    yield put({\r\n      type: UPDATE_FILM_FIELDS_SUCCESS,\r\n      payload: action.payload.payload\r\n    });\r\n    \r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function* rootSagaFilm() {\r\n  yield takeEvery(GET_FILM, getFilm);\r\n  yield takeEvery(UPDATE_FILM_FIELD, updateFilmField);\r\n}","import { all } from '@redux-saga/core/effects';\r\nimport rootSagaFilmsList from '../models/filmlist/sagas';\r\nimport rootSagaFilm from '../models/currentFilm/sagas';\r\n\r\nexport  function* rootSaga() {\r\n  yield all([\r\n    rootSagaFilmsList(),\r\n    rootSagaFilm()\r\n  ])\r\n}","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport filmsReducer from '../models/filmlist/reducer';\r\nimport filmReducer from '../models/currentFilm/reducer';\r\nimport { rootSaga } from './rootSaga';\r\nimport { connectRouter, routerMiddleware  } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory();\r\nconst saga = createSagaMiddleware();\r\n\r\nconst reducer = history => combineReducers(\r\n  {\r\n    films: filmsReducer,\r\n    film: filmReducer,\r\n    router: connectRouter(history),\r\n  }\r\n);\r\n\r\n\r\nconst store = createStore(reducer(history),\r\n  composeWithDevTools(applyMiddleware(saga, routerMiddleware(history))));\r\nsaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store, { history } from './state/Store';\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <ConnectedRouter history={history}>\r\n    <App />\r\n  </ConnectedRouter>\r\n</Provider>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactCollapse\":\"AddFilm_reactCollapse__1UIbf\",\"createdFilmFrame\":\"AddFilm_createdFilmFrame__qJHL1\",\"show\":\"AddFilm_show__1FuCa\",\"title\":\"AddFilm_title__1Xy8_\",\"titleText\":\"AddFilm_titleText__1WRfP\",\"close\":\"AddFilm_close__32gEo\",\"active\":\"AddFilm_active__1IS8d\",\"frameFields\":\"AddFilm_frameFields__ncxrV\",\"field\":\"AddFilm_field__1Zd1P\",\"error\":\"AddFilm_error__10bU3\",\"green\":\"AddFilm_green__3zETa\",\"btn\":\"AddFilm_btn__3Kmp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FilmItem_item__3a3ry\",\"filmsItem\":\"FilmItem_filmsItem__ck-yw\",\"removeBtn\":\"FilmItem_removeBtn__2_2h9\",\"title\":\"FilmItem_title__1q9vV\",\"titleText\":\"FilmItem_titleText__165-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsContainer\":\"FilmsList_filmsContainer__3U2xG\",\"search\":\"FilmsList_search__2UzQR\",\"content\":\"FilmsList_content__2GZPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__JEbsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomePage_home__3qIF8\"};"],"sourceRoot":""}