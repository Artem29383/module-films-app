{"version":3,"sources":["components/FilmsList/FilmsList.module.scss","components/Input/Input.module.scss","App.module.scss","pages/HomePage/HomePage.module.scss","components/Button/Button.module.scss","components/AddFilm/AddFilm.module.scss","hooks/useSelector.js","models/filmlist/selectors.js","hooks/useAction.js","components/Input/Input.jsx","components/Button/Button.jsx","components/AddFilm/AddFilm.jsx","models/filmlist/action.js","components/FilmsList/FilmsList.jsx","routes.js","pages/HomePage/HomePage.jsx","App.js","utils/deepCopy.js","utils/removePropFromObject.js","utils/removeArrayElement.js","models/filmlist/reducer.js","api/api.js","sagas/sagas.js","state/Store.js","index.js"],"names":["module","exports","func","params","useSelector","state","getIsPost","films","isPost","getFilms","filmsList","entities","getInitSelector","createSelector","init","getFilmsSelector","getFilteredItems","ids","memoize","search","filter","item","name","toLowerCase","includes","useAction","type","dispatch","useDispatch","useCallback","payload","Input","value","handler","desc","isError","className","classes","group","onChange","placeholder","frameInput","bar","label","error","Button","children","changeHandler","btn","onClick","AddFilm","useState","isShow","setIsShow","setName","genre","setGenre","date","setDate","country","setCountry","setIsError","isDone","postFilm","setIsDone","nameHandler","e","currentTarget","genreHandler","dateHandler","countryHandler","useEffect","setTimeout","theme","collapse","reactCollapse","content","classnames","createdFilmFrame","show","isOpened","title","titleText","frameFields","field","green","trim","id","Date","now","fields","close","active","FilmsList","history","useHistory","setSearch","filteredFilms","isSearch","test","location","removeFilm","searchHandler","push","match","replace","map","key","to","activeClassName","filmsItem","length","slice","removeBtn","removeFilmHandler","filmsContainer","exact","path","component","home","App","isInit","routs","routes","Component","render","props","original","JSON","parse","stringify","removePropFromObject","obj","res","removeArrayElement","index","indexOf","splice","initialState","filmsReducer","action","deepCopy","API","instance","get","postCreateFilms","film","post","deleteFilm","delete","this","axios","create","baseURL","rootSaga","call","put","filmsSchema","schema","Entity","filmsListSchema","dataNormalized","normalize","data","result","console","log","takeEvery","saga","createSagaMiddleware","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70163455.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsContainer\":\"FilmsList_filmsContainer__11OxH\",\"search\":\"FilmsList_search__1e7e8\",\"content\":\"FilmsList_content__3tiIo\",\"item\":\"FilmsList_item__3LbjF\",\"filmsItem\":\"FilmsList_filmsItem__EZYd-\",\"removeBtn\":\"FilmsList_removeBtn__1ydW5\",\"active\":\"FilmsList_active__3BJmb\",\"title\":\"FilmsList_title__24V4B\",\"titleText\":\"FilmsList_titleText__3nlwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frameInput\":\"Input_frameInput__1787G\",\"group\":\"Input_group__EgZ5C\",\"label\":\"Input_label__15E8K\",\"input\":\"Input_input__2Faqu\",\"bar\":\"Input_bar__3gCN7\",\"error\":\"Input_error__1s1uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1jzHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomePage_home__3TQdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__xh7zG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactCollapse\":\"AddFilm_reactCollapse__Isd02\",\"createdFilmFrame\":\"AddFilm_createdFilmFrame__FJNSf\",\"show\":\"AddFilm_show__1cVIx\",\"title\":\"AddFilm_title__2Hdq8\",\"titleText\":\"AddFilm_titleText__3d4nP\",\"close\":\"AddFilm_close__Qxjj7\",\"active\":\"AddFilm_active__Z_2Cz\",\"frameFields\":\"AddFilm_frameFields__1yfj7\",\"field\":\"AddFilm_field__1dnku\",\"error\":\"AddFilm_error__1iNV9\",\"green\":\"AddFilm_green__VG5b5\",\"btn\":\"AddFilm_btn__3WGDc\"};","import { useSelector } from 'react-redux';\r\n\r\nexport default (func, params = {}) => useSelector(state => func(state, params));","import { createSelector } from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst getInit = state => {\r\n  return state.films.init;\r\n};\r\n\r\nexport const getIsPost = state => {\r\n  return state.films.isPost;\r\n};\r\n\r\nconst getFilms = state => {\r\n  return state.films.filmsList.entities;\r\n};\r\n\r\nconst getIds = state => {\r\n  return state.films.filmsList.ids;\r\n};\r\n\r\nexport const getInitSelector = createSelector([getInit], init => init);\r\n\r\nexport const getFilmsSelector = createSelector([getFilms], films => films);\r\n\r\n\r\nexport const getFilteredItems = createSelector([getFilms, getIds], (films, ids) => {\r\n  return memoize(search => {\r\n    return ids.filter(item => (films[item].name.toLowerCase().includes(search.toLowerCase())));\r\n  })\r\n});","import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import React from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\nconst Input = ({\r\n  value,\r\n  handler,\r\n  desc,\r\n  isError\r\n}) => (\r\n  <div className={classes.group}>\r\n    <input\r\n      value={value}\r\n      onChange={handler}\r\n      placeholder=' '\r\n      className={classes.frameInput}\r\n      type=\"text\" />\r\n    <span className={classes.bar} />\r\n    <label className={classes.label}>{desc}</label>\r\n    {(isError && !value)\r\n    && <div className={classes.error}>\r\n      Заполните поле.\r\n    </div>}\r\n  </div>\r\n);\r\n\r\nexport default Input;","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = ({ children, changeHandler }) => (\r\n  <button className={classes.btn} onClick={changeHandler}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport classes from './AddFilm.module.scss';\r\nimport classnames from 'classnames';\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\nimport useSelector from '../../hooks/useSelector';\r\nimport { getIsPost } from '../../models/filmlist/selectors';\r\nimport useAction from '../../hooks/useAction';\r\nimport {\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS\r\n} from '../../models/filmlist/action';\r\nimport { Collapse } from 'react-collapse';\r\n\r\n\r\nconst AddFilm = () => {\r\n  \r\n  const [isShow, setIsShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  const isDone = useSelector(getIsPost);\r\n  const postFilm = useAction(POST_FILM);\r\n  const setIsDone = useAction(POST_FILM_SUCCESS);\r\n  \r\n  const showHandler = () => {\r\n    setIsShow(!isShow);\r\n    if (isShow) {\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    }\r\n  };\r\n  \r\n  const nameHandler = useCallback(e => {\r\n    setName(e.currentTarget.value);\r\n  }, [setName]);\r\n  \r\n  const genreHandler = useCallback(e => {\r\n    setGenre(e.currentTarget.value);\r\n  }, [setGenre]);\r\n  \r\n  const dateHandler = useCallback(e => {\r\n    setDate(e.currentTarget.value);\r\n  }, [setDate]);\r\n  \r\n  const countryHandler = useCallback(e => {\r\n    setCountry(e.currentTarget.value);\r\n  }, [setCountry]);\r\n  \r\n  const sumbitHandler = () => {\r\n    if (name.trim() && genre.trim() && date.trim() && country.trim()) {\r\n      const id = Date.now();\r\n      postFilm({\r\n        id, payload: {\r\n          id, name, genre, date, country,\r\n          fields: [\r\n            'Название', 'Жанр', 'Дата выхода', 'Страна'\r\n          ]\r\n        }\r\n      });\r\n      setName('');\r\n      setGenre('');\r\n      setDate('');\r\n      setCountry('');\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isError) {\r\n      setTimeout(() => setIsError(false), 2000);\r\n    }\r\n    if (isDone) {\r\n      setTimeout(() => setIsDone(false), 2000);\r\n    }\r\n  }, [isError, isDone, setIsDone]);\r\n  \r\n  const theme = {\r\n    collapse: `${classes.reactCollapse}`,\r\n    content: `${classnames(\r\n      classes.createdFilmFrame,\r\n      isShow && classes.show)}`\r\n  };\r\n  \r\n \r\n  return (\r\n    <Collapse isOpened={isShow || !isShow} theme={theme}>\r\n      <div className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          Добавить фильм\r\n        </div>\r\n      </div>\r\n      <div className={classes.frameFields}>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={name} handler={nameHandler} desc='Название' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={genre} handler={genreHandler} desc='Жанр' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={date} handler={dateHandler} desc='Дата выхода' />\r\n        </div>\r\n        <div className={classes.field}>\r\n          <Input isError={isError} value={country} handler={countryHandler} desc='Страна выпуска' />\r\n        </div>\r\n        {isDone &&\r\n        <div className={classnames(\r\n          classes.error,\r\n          classes.green\r\n        )}>\r\n          Фильм добавлен.\r\n        </div>}\r\n      </div>\r\n      <div className={classes.btn}>\r\n      <Button changeHandler={sumbitHandler}>Добавить фильм</Button>\r\n      </div>\r\n      <div\r\n        className={classnames(\r\n          classes.close,\r\n          isShow && classes.active)\r\n        }\r\n        onClick={showHandler} />\r\n    </Collapse>\r\n  )\r\n};\r\n\r\nexport default AddFilm;","export const POST_FILM = 'POST_FILM';\r\nexport const POST_FILM_SUCCESS = 'POST_FILM_SUCCESS';\r\nexport const ADD_FILM = 'ADD_FILM';\r\nexport const GET_FILMS = 'GET_FILMS';\r\nexport const PUT_FILMS = 'PUT_FILMS';\r\nexport const SET_INIT = 'SET_INIT';\r\nexport const DELETE_FILM = 'DELETE_FILM';\r\nexport const REMOVE_FILM = 'REMOVE_FILM';","import React, { useCallback, useEffect, useState } from 'react';\r\nimport classes from './FilmsList.module.scss';\r\nimport Input from '../Input/Input';\r\nimport {\r\n  NavLink,\r\n  useHistory\r\n} from 'react-router-dom';\r\nimport useSelector from '../../hooks/useSelector';\r\nimport {\r\n  getFilmsSelector,\r\n  getFilteredItems\r\n} from '../../models/filmlist/selectors';\r\nimport useAction from '../../hooks/useAction';\r\nimport { DELETE_FILM } from '../../models/filmlist/action';\r\n\r\nconst FilmsList = () => {\r\n  const history = useHistory();\r\n  const [search, setSearch] = useState('');\r\n  const films = useSelector(getFilmsSelector);\r\n  const filteredFilms = useSelector(getFilteredItems)(search);\r\n  const isSearch = /\\?search=([(a-zA-Z)|(а-яА-Я)|\\w]+)/.test(history.location.search);\r\n  const removeFilm = useAction(DELETE_FILM);\r\n  \r\n  \r\n  const searchHandler = useCallback(e => {\r\n    if (e.currentTarget.value.trim()) {\r\n      setSearch(e.currentTarget.value);\r\n      history.push(`/?search=${e.currentTarget.value.toLowerCase()}`);\r\n    } else {\r\n      setSearch('');\r\n      history.push(`/`);\r\n    }\r\n  }, [setSearch, history]);\r\n  \r\n  \r\n  const removeFilmHandler = (id) => {\r\n    removeFilm(id);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isSearch) {\r\n      const match = history.location.search.match(/=(.+)$/m)[1].replace(/%20/g, ' ');\r\n      setSearch(match);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!isSearch && search) {\r\n      setSearch('');\r\n    }\r\n  }, [isSearch, search]);\r\n  \r\n  const filmsList = filteredFilms.map(id => {\r\n    return (\r\n      <li key={id} className={classes.item}>\r\n        <NavLink\r\n          to={`/films/${id}`}\r\n          activeClassName={classes.active}\r\n          className={classes.filmsItem}\r\n        >\r\n          <div className={classes.title}>\r\n            <span className={classes.titleText}>\r\n              {(films[id].name).length > 15\r\n                ? films[id].name.slice(0, 15) + '...'\r\n                : films[id].name}\r\n            </span>\r\n          </div>\r\n        </NavLink>\r\n        <NavLink to='/' className={classes.removeBtn} onClick={() => removeFilmHandler(id)}>\r\n          ✖\r\n        </NavLink>\r\n      </li>\r\n    )\r\n  });\r\n  \r\n  \r\n  return (\r\n    <div className={classes.filmsContainer}>\r\n      <div className={classes.search}>\r\n        <Input value={search} handler={searchHandler} desc='Введите название фильма' />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <ul>\r\n          {filmsList}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default FilmsList;","import HomePage from './pages/HomePage';\r\n\r\nexport default [{\r\n  exact: true,\r\n  path: ['/', '/?search=?str', '/films/:id'],\r\n  component: HomePage\r\n}]","import React from 'react';\r\nimport classes from './HomePage.module.scss';\r\nimport AddFilm from '../../components/AddFilm';\r\nimport FilmsList from '../../components/FilmsList';\r\n\r\n\r\nconst HomePage = () => {\r\n  \r\n  \r\n  return (\r\n    <div className={classes.home}>\r\n      <AddFilm />\r\n      <FilmsList />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default HomePage;","import React, { Fragment, useEffect } from 'react';\nimport {\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport classes from './App.module.scss';\nimport useSelector from './hooks/useSelector';\nimport { getInitSelector } from './models/filmlist/selectors';\nimport useAction from './hooks/useAction';\nimport { GET_FILMS } from './models/filmlist/action';\nimport routes from './routes';\n\nconst App = () => {\n  const isInit = useSelector(getInitSelector);\n  const getFilms = useAction(GET_FILMS);\n  \n  useEffect(() => {\n    getFilms();\n  }, [getFilms]);\n  \n  \n  const routs = routes.map(({ exact, path, component: Component }) => {\n      return (\n        <Route\n          exact = {exact}\n          key={path}\n          path={path}\n          render={props => <Component {...props} />}\n        />\n      )\n    }\n  );\n  \n  \n  return (\n    <Fragment>\n      {isInit &&\n        <div className={classes.content}>\n          <Switch>\n          {routs}\n          <Redirect to='/' />\n      </Switch>\n        </div>\n      }\n    </Fragment>\n  );\n};\n\nexport default App;\n","export default original => JSON.parse(JSON.stringify(original));","export const removePropFromObject = (obj, id) => {\r\n  const res = { ...obj };\r\n  delete res[id];\r\n  return res;\r\n};","export const removeArrayElement = (obj, id) => {\r\n  const index = obj.indexOf(id);\r\n  obj.splice(index, 1);\r\n  return obj;\r\n};","import {\r\n  ADD_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS,\r\n  REMOVE_FILM,\r\n  SET_INIT\r\n} from './action';\r\nimport deepCopy from '../../utils/deepCopy';\r\nimport { removePropFromObject } from '../../utils/removePropFromObject';\r\nimport { removeArrayElement } from '../../utils/removeArrayElement';\r\n\r\nconst initialState = {\r\n  filmsList: [],\r\n  init: false,\r\n  isPost: false\r\n};\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    \r\n    case PUT_FILMS: {\r\n      const { entities, ids } = action.payload;\r\n      return {\r\n        ...state, filmsList: {\r\n          entities, ids\r\n        }\r\n      }\r\n    }\r\n  \r\n    case ADD_FILM: {\r\n      const { id, payload } = action.payload;\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      entities[id] = payload;\r\n      ids.push(id);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          entities, ids\r\n        }\r\n      };\r\n    }\r\n  \r\n  \r\n    case REMOVE_FILM: {\r\n      const { entities, ids } = deepCopy(state.filmsList);\r\n      return {\r\n        ...state,\r\n        filmsList: {\r\n          ...state.filmsList,\r\n          entities: removePropFromObject(entities, action.payload),\r\n          ids: removeArrayElement(ids, action.payload)\r\n        }\r\n      };\r\n    }\r\n    \r\n    \r\n    case POST_FILM_SUCCESS: {\r\n      return { ...state, isPost: action.payload };\r\n    }\r\n    \r\n    \r\n    case SET_INIT: {\r\n      return { ...state, init: true }\r\n    }\r\n    \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default filmsReducer;","import axios from \"axios\";\r\n\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: 'http://localhost:5000/'\r\n    });\r\n  }\r\n  \r\n  getFilms = () => {\r\n    return this.instance.get('filmsList');\r\n  };\r\n  \r\n  postCreateFilms = (id, film) => {\r\n    return this.instance.post(`filmsList`, film);\r\n  };\r\n  \r\n  deleteFilm = (id) => {\r\n    return this.instance.delete(`filmsList/${id}`);\r\n  };\r\n  \r\n  \r\n}\r\n\r\nconst API = new Api();\r\n\r\nexport default API;\r\n","import API from '../api/api';\r\nimport {\r\n  call,\r\n  takeEvery,\r\n  put\r\n} from 'redux-saga/effects'\r\nimport {\r\n  ADD_FILM, DELETE_FILM,\r\n  GET_FILMS,\r\n  POST_FILM,\r\n  POST_FILM_SUCCESS,\r\n  PUT_FILMS, REMOVE_FILM,\r\n  SET_INIT\r\n} from '../models/filmlist/action';\r\nimport {\r\n  normalize,\r\n  schema\r\n} from 'normalizr';\r\n\r\nfunction* postFilm(action) {\r\n    yield call(API.postCreateFilms, action.payload.id, action.payload.payload);\r\n    yield put({\r\n      type: ADD_FILM, payload: {\r\n        id: action.payload.id,\r\n        payload: action.payload.payload\r\n      }\r\n    });\r\n    yield put({\r\n      type: POST_FILM_SUCCESS,\r\n      payload: true\r\n    })\r\n}\r\n\r\n\r\nfunction* getFilms() {\r\n  try {\r\n    const payload = yield call(API.getFilms);\r\n    const filmsSchema = new schema.Entity('filmsList');\r\n    const filmsListSchema = [filmsSchema];\r\n    const dataNormalized = normalize(payload.data, filmsListSchema);\r\n    yield put({\r\n      type: PUT_FILMS,\r\n      payload: {\r\n        entities: dataNormalized.entities.filmsList || {},\r\n        ids: dataNormalized.result\r\n      }\r\n    });\r\n    yield put({ type: SET_INIT });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction* deleteFilm(action) {\r\n  try {\r\n    yield call(API.deleteFilm, action.payload);\r\n    yield put({\r\n      type: REMOVE_FILM,\r\n      payload: action.payload\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery(POST_FILM, postFilm);\r\n  yield takeEvery(GET_FILMS, getFilms);\r\n  yield takeEvery(DELETE_FILM, deleteFilm);\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from 'redux';\r\nimport filmsReducer from '../models/filmlist/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas/sagas';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst reducer = combineReducers(\r\n  {\r\n    films: filmsReducer\r\n  }\r\n);\r\n\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(saga)));\r\nsaga.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './state/Store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</Provider>, document.getElementById('root'));\n"],"sourceRoot":""}